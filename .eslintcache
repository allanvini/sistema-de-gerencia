[{"C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\index.js":"1","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\reportWebVitals.js":"2","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\App.js":"3","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\Login\\Login.js":"4","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\auth\\config.js":"5","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\dashboard\\dashboard.js":"6","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\controller\\firebaseControllers\\firebaseController.js":"7","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\menu\\menu.js":"8","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\main-view\\dashboardView.js":"9","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\pedido-de-vendas\\pedidoDeVendas.js":"10","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\cadastra-novo-produto\\cadastraNovoProduto.js":"11","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\ver-pedidos\\verPedidos.js":"12","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\visao-geral\\visaoGeral.js":"13","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\ver-balanco-mensal\\verBalancoMensal.js":"14","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\ver-pedidos\\modal\\modalView.js":"15","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\gerenciar-produtos\\gerenciarProdutos.js":"16"},{"size":481,"mtime":1612054807668,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":771,"mtime":1612132448998,"results":"20","hashOfConfig":"18"},{"size":2489,"mtime":1613112293010,"results":"21","hashOfConfig":"18"},{"size":506,"mtime":1612081413649,"results":"22","hashOfConfig":"18"},{"size":792,"mtime":1612327093869,"results":"23","hashOfConfig":"18"},{"size":3687,"mtime":1613112384288,"results":"24","hashOfConfig":"18"},{"size":1291,"mtime":1613112209784,"results":"25","hashOfConfig":"18"},{"size":1475,"mtime":1613104127386,"results":"26","hashOfConfig":"18"},{"size":7807,"mtime":1613112316184,"results":"27","hashOfConfig":"18"},{"size":1994,"mtime":1613110399116,"results":"28","hashOfConfig":"18"},{"size":4685,"mtime":1613112342124,"results":"29","hashOfConfig":"18"},{"size":408,"mtime":1613106076572,"results":"30","hashOfConfig":"18"},{"size":6716,"mtime":1613112850628,"results":"31","hashOfConfig":"18"},{"size":7608,"mtime":1613103849076,"results":"32","hashOfConfig":"18"},{"size":1541,"mtime":1613111913593,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"t1ledo",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\index.js",[],["75","76"],"C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\reportWebVitals.js",[],"C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\App.js",[],"C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\Login\\Login.js",[],"C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\auth\\config.js",[],"C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\dashboard\\dashboard.js",[],"C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\controller\\firebaseControllers\\firebaseController.js",["77","78"],"import firebase from 'firebase';\r\nimport firebaseConfig from '../../auth/config';\r\n\r\nrequire('firebase/firestore');\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nlet db = firebase.firestore();\r\n\r\nlet FirebaseControllerFunctions = {\r\n\r\n    firebaseLogin: async (email, password) => {\r\n        return await firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then((user) => {\r\n                return true;\r\n            })\r\n            .catch((error) => {\r\n                return false;\r\n            });\r\n    },\r\n\r\n    writeSellRequest: async (data) => {\r\n\r\n        const now = new Date();\r\n\r\n        let polishedSellObject = {\r\n            cliente: data.cliente,\r\n            itens: data.itens,\r\n            valorTotal: data.valorTotal,\r\n            custoTotal: data.custoTotal,\r\n            observacao: data.observacao,\r\n            mes: now.getMonth()+1,\r\n            ano: now.getFullYear(),\r\n            status: data.status\r\n        }\r\n\r\n        await db.collection('vendas').add(polishedSellObject)\r\n        .then(function(docRef) {\r\n            return true;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(\"Error adding document: \", error);\r\n            return false;\r\n        });\r\n    },\r\n\r\n    getSellsByYearAndMonth: async (year,month) =>{\r\n\r\n        const sellsRef = db.collection('vendas');\r\n        const snapshot = await sellsRef.get();\r\n\r\n        let sells = [];\r\n\r\n        snapshot.docs.forEach(doc=>{\r\n            if(doc.data().ano == year && doc.data().mes == month){\r\n                sells.push({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                })\r\n            }\r\n        })\r\n\r\n        return sells;\r\n        \r\n    },\r\n\r\n    getSells: async (limit)=>{\r\n        const sellsRef = db.collection('vendas');\r\n        const snapshot = await sellsRef.limit(limit).get();\r\n\r\n        let sells = [];\r\n\r\n        snapshot.docs.forEach(doc=>{\r\n            sells.push({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            })\r\n        })\r\n\r\n        return sells;\r\n    },\r\n\r\n    deleteSellByID: async(id)=>{\r\n        await db.collection(\"vendas\").doc(id).delete();\r\n    },\r\n\r\n    deleteProductByID: async(id)=>{\r\n        await db.collection(\"produtos\").doc(id).delete();\r\n    },\r\n\r\n    updateSellByID: async(id,data)=>{\r\n\r\n        let polishedSellObject = {\r\n            cliente: data.cliente,\r\n            itens: data.itens,\r\n            valorTotal: data.valorTotal,\r\n            custoTotal: data.custoTotal,\r\n            observacao: data.observacao,\r\n            mes: data.mes,\r\n            ano: data.ano,\r\n            status: data.status\r\n        }\r\n\r\n        await db.collection('vendas').doc(id).set(polishedSellObject)\r\n        .then(function(docRef) {\r\n            return true;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(\"Error editing document: \", error);\r\n            return false;\r\n        });\r\n    },\r\n\r\n    writeNewProduct: async (product)=>{\r\n        await db.collection('produtos').doc(product.nome).set(product)\r\n        .then(function(docRef){\r\n            return true;\r\n        })\r\n        .catch(function(error){\r\n            console.log(\"Error adding document: \", error);\r\n            return false;\r\n        })\r\n    },\r\n\r\n    getProducts: async()=>{\r\n        let products = [];\r\n\r\n        const productsRef = db.collection('produtos');\r\n        const snapshot = await productsRef.get();\r\n\r\n        snapshot.docs.forEach(doc=>{\r\n            products.push({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            })\r\n        })\r\n\r\n        return products;\r\n    },\r\n\r\n}\r\n\r\nexport default FirebaseControllerFunctions;\r\n","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\menu\\menu.js",["79"],"import React , {Component} from 'react';\r\nimport './menu.css'\r\n\r\nimport FirebaseControllerFunctions from '../../controller/firebaseControllers/firebaseController'\r\n\r\nclass Menu extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"menu-container\">\r\n                <h1 className=\"menu-header\">Dashboard</h1>\r\n                <button onClick={()=>{this.props.setScreen(1)}} className=\"menu-button\">Visão geral</button>\r\n                <button onClick={()=>{this.props.setScreen(2)}} className=\"menu-button\">Ver meus pedidos de venda</button>\r\n                <button onClick={()=>{this.props.setScreen(3)}} className=\"menu-button\">Fazer novo pedido de venda</button>\r\n                <button onClick={()=>{this.props.setScreen(4)}} className=\"menu-button\">Gerenciar produtos</button>\r\n                <button onClick={()=>{this.props.setScreen(5)}} className=\"menu-button\">cadastrar produto</button>\r\n                <button onClick={()=>{this.props.setScreen(6)}} className=\"menu-button\">Ver balanço mensal</button>\r\n                <button onClick={()=>{this.props.logout()}} className=\"menu-button\">Sair</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\main-view\\dashboardView.js",["80"],"import React , {Component} from 'react';\r\nimport './dashboardView.css';\r\n\r\nimport PedidoDeVendas from '../pedido-de-vendas/pedidoDeVendas';\r\nimport CadastraNovoProduto from '../cadastra-novo-produto/cadastraNovoProduto';\r\nimport VerPedidos from '../ver-pedidos/verPedidos'\r\nimport GerenciarProdutos from '../gerenciar-produtos/gerenciarProdutos';\r\nimport VisaoGeral from '../visao-geral/visaoGeral';\r\nimport VerBalancoMensal from '../ver-balanco-mensal/verBalancoMensal';\r\n\r\nclass dashboardView extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selectedScreen: this.props.selectedScreen\r\n        };\r\n    }\r\n\r\n    renderSwitch(param){\r\n        switch(param){\r\n            case 1 :\r\n                return <VisaoGeral></VisaoGeral>;\r\n\r\n            case 2 :\r\n                return <VerPedidos></VerPedidos>;\r\n                \r\n            case 3:\r\n                return <PedidoDeVendas></PedidoDeVendas>;\r\n\r\n            case 4:\r\n                return <GerenciarProdutos></GerenciarProdutos>;\r\n            \r\n            case 5:\r\n                return <CadastraNovoProduto></CadastraNovoProduto>;\r\n\r\n            case 6:\r\n                return <VerBalancoMensal></VerBalancoMensal>;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"main-container\">\r\n                {this.renderSwitch(this.props.selectedScreen)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default dashboardView;\r\n","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\pedido-de-vendas\\pedidoDeVendas.js",["81","82","83","84"],"import React , {Component} from 'react';\r\nimport './pedidoDeVendas.css';\r\n\r\nimport FirebaseControllerFunctions from '../../controller/firebaseControllers/firebaseController';\r\n\r\nclass PedidoDeVendas extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cliente: '',\r\n            itens: [],\r\n            valorTotal: 0,\r\n            custoTotal: 0,\r\n            observacao: '',\r\n            newItem:{\r\n                tipo: '',\r\n                quantidade: '',\r\n                valorUnitario: '',\r\n                valorTotal: '',\r\n                custoTotal: 0\r\n            },\r\n            status: false,\r\n            productList: []\r\n        }\r\n\r\n        this.setCliente = this.setCliente.bind(this);\r\n        this.setItems = this.setItems.bind(this);\r\n        this.setValorTotal = this.setValorTotal.bind(this);\r\n        this.setObservacao = this.setObservacao.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.changeNewItem = this.changeNewItem.bind(this);\r\n        this.setProductOptions = this.setProductOptions.bind(this);\r\n        this.setCustoTotal = this.setCustoTotal.bind(this);\r\n        this.findProductIndex = this.findProductIndex.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setProductOptions();\r\n    }\r\n\r\n    async setProductOptions(){\r\n        let state = this.state;\r\n        state.productList = await FirebaseControllerFunctions.getProducts();\r\n        this.setState(state);\r\n    }\r\n\r\n    setCliente(event){\r\n        let state = this.state;\r\n        state.cliente = event.target.value;\r\n        this.setState(state);\r\n    }\r\n\r\n    setItems(item){\r\n        let state = this.state;\r\n        state.itens.push(item);\r\n        this.setState(state);\r\n    }\r\n\r\n    setValorTotal(){\r\n        let state = this.state;\r\n        let valorTotal = 0;\r\n        state.itens.forEach(element=>{\r\n            valorTotal += element.valorTotal;\r\n        })\r\n        state.valorTotal = valorTotal;\r\n        this.setState(state);\r\n    }\r\n\r\n    setCustoTotal(){\r\n        let state = this.state;\r\n        let custoTotal = 0;\r\n        state.itens.forEach(element=>{\r\n            custoTotal+=element.custoTotal;\r\n        })\r\n        state.custoTotal = custoTotal;\r\n        this.setState(state);\r\n    }\r\n\r\n    setObservacao(event){\r\n        let state = this.state;\r\n        state.observacao = event.target.value;\r\n        this.setState(state);\r\n    }\r\n\r\n    deleteItem(index){\r\n        let state = this.state;\r\n        state.itens.splice(index,1);\r\n        this.setState(state);\r\n    }\r\n\r\n    changeNewItem(event){\r\n        let state = this.state;\r\n        state.newItem[event.target.name] = event.target.value;\r\n        state.newItem.valorTotal = state.newItem.quantidade * state.newItem.valorUnitario;\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    addItem(){\r\n        let state = this.state;\r\n        let productIndex = this.findProductIndex();\r\n        let custo = state.newItem.quantidade * state.productList[productIndex].custoBase;\r\n        state.newItem.custoTotal = custo;\r\n        state.itens.push(state.newItem);\r\n        state.newItem = {\r\n            tipo: '',\r\n            quantidade: '',\r\n            valorUnitario: '',\r\n            valorTotal: '',\r\n            custoTotal: 0\r\n        }\r\n        this.setState(state);\r\n    }\r\n\r\n    findProductIndex(){\r\n        let state = this.state;\r\n        let productIndex;\r\n        state.productList.forEach(element=>{\r\n            if(element.id == state.newItem.tipo){\r\n                productIndex = state.productList.indexOf(element);\r\n            }\r\n        })\r\n\r\n        return productIndex;\r\n    }\r\n\r\n    cliearFields(){\r\n        let state = {\r\n            cliente: '',\r\n            itens: [],\r\n            valorTotal: 0,\r\n            custoTotal: 0,\r\n            observacao: '',\r\n            newItem:{\r\n                tipo: '',\r\n                quantidade: '',\r\n                valorUnitario: '',\r\n                valorTotal: '',\r\n                custoTotal: 0\r\n            },\r\n            status: false,\r\n            productList: []\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"new-sell\">\r\n                <h1>Novo pedido de venda</h1>\r\n                <div className=\"new-sell-form\">\r\n                    <p>Cliente</p>\r\n                    <input name=\"cliente\" className=\"new-sell-input\" onChange={this.setCliente} value={this.state.cliente}></input>\r\n                    <p>Itens do pedido</p>\r\n                    <div className=\"new-item-add-container\">\r\n                        <span>Item </span>\r\n                        <select name=\"tipo\" onChange={this.changeNewItem} value={this.state.newItem.tipo}>\r\n                        <option>Selecionar</option>\r\n                            {this.state.productList.map(element=>\r\n                                <option>{element.id}</option>\r\n                            )}\r\n                        </select>\r\n                        <span>Quantidade </span>\r\n                        <input name=\"quantidade\" className=\"new-sell-input\" onChange={this.changeNewItem} value={this.state.newItem.quantidade}></input>\r\n                        <span>Valor Unitário </span>\r\n                        <input name=\"valorUnitario\" className=\"new-sell-input\" onChange={this.changeNewItem} value={this.state.newItem.valorUnitario}></input>\r\n                        <button className=\"add-item-button\" onClick={()=>{\r\n                                this.addItem();\r\n                                this.setValorTotal();\r\n                                this.setCustoTotal();\r\n                            }\r\n                        }>Adicionar</button>\r\n                    </div>\r\n                    <ul className=\"new-sell-items-list-container\">\r\n                        <h3>Lista de itens:</h3>\r\n                        \r\n                        {this.state.itens.map(element=>(\r\n                            <div className=\"sell-item\" key={this.state.itens.indexOf(element)}>\r\n                                <li>\r\n                                    <span>Item: <b>{element.tipo}</b> // Quantidade: <b>{element.quantidade}</b> // Valor Unitário: <b>R$ {element.valorUnitario}</b> // Total: <b>R$ {element.valorTotal}</b></span>\r\n                                </li>\r\n                                <button onClick={()=>{this.deleteItem(this.state.itens.indexOf(element)); this.setValorTotal(); this.setCustoTotal()}} className=\"delete-item-button\">Excluir Item</button>\r\n                            </div>\r\n                        ))}\r\n                        \r\n\r\n                    </ul>\r\n                    <h5>Custo geral do pedido: R$ {this.state.custoTotal}</h5>\r\n                    <h5>Lucro do pedido: R$ {(this.state.valorTotal)-(this.state.custoTotal)}</h5>\r\n                    <h3>Valor total do pedido: R$ {this.state.valorTotal}</h3>\r\n                </div>\r\n                <span>Observações</span>\r\n                <textarea className=\"sell-obs\" name=\"observacao\" value={this.state.observacao} onChange={this.setObservacao}></textarea>\r\n                <button className=\"new-sell-finish-button\" onClick={async ()=>{\r\n                    if(!this.state.cliente || !this.state.itens){\r\n                        alert('Por favor, preencha todos os campos para prosseguir');\r\n                    } else {\r\n                        await FirebaseControllerFunctions.writeSellRequest(this.state);\r\n                        alert('Venda realizada com sucesso!');\r\n                        this.cliearFields();\r\n                    }\r\n                    \r\n                }}>Finalizar pedido!</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PedidoDeVendas;\r\n","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\cadastra-novo-produto\\cadastraNovoProduto.js",[],"C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\ver-pedidos\\verPedidos.js",["85","86","87","88"],"import React, {Component} from 'react';\r\n\r\nimport './verPedidos.css';\r\nimport ModalView from './modal/modalView';\r\n\r\nimport FirebaseControllerFunctions from '../../controller/firebaseControllers/firebaseController';\r\n\r\nclass VerPedidos extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cards: [],\r\n            modalVisible: false,\r\n            selectedSell: null,\r\n            selectedView: 0,\r\n            amountOfData: 5\r\n        }\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.enableModal = this.enableModal.bind(this);\r\n        this.refreshCards = this.refreshCards.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshCards();\r\n    }\r\n\r\n    async refreshCards(){\r\n        let state = this.state;\r\n        state.cards = await FirebaseControllerFunctions.getSells(state.amountOfData);\r\n        state.amountOfData *= 2;\r\n        this.setState(state);\r\n    }\r\n\r\n    closeModal(){\r\n        let state = this.state;\r\n        state.modalVisible = false;\r\n        state.selectedSell = null;\r\n        this.setState(state);\r\n        this.refreshCards();\r\n    }\r\n\r\n    enableModal(index){\r\n        let state = this.state;\r\n        state.selectedSell = state.cards[index];\r\n        state.modalVisible = true;\r\n        this.setState(state);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"sells-cards-container\">\r\n                <h1>Meus pedidos de venda</h1>\r\n                <div className=\"grid-selection\">\r\n                    <button onClick={()=>{\r\n                        let state = this.state;\r\n                        state.selectedView = 1;\r\n                        this.setState(state);\r\n                    }} className=\"grid-selection-button\">Ver pedidos finalizados</button>\r\n                    <button onClick={()=>{\r\n                        let state = this.state;\r\n                        state.selectedView = 2;\r\n                        this.setState(state);\r\n                    }} className=\"grid-selection-button\">Ver pedidos pendentes</button>\r\n                </div>\r\n\r\n                {this.state.selectedView == 2 &&\r\n                    <div>\r\n                        <p>Pedidos pendentes</p>\r\n                        <div className=\"sells-cards\">\r\n                        {this.state.cards.map(element=>{\r\n                            if(!element.status){\r\n                                return(\r\n                                    <div className=\"sells-card-container\">\r\n                                        <h2>{element.cliente}</h2>\r\n                                        <span>id: {element.id}</span>\r\n                                        <div className=\"sells-card-footer\">\r\n                                            <button className=\"card-footer-button\" onClick={()=>{\r\n                                                this.enableModal(this.state.cards.indexOf(element));\r\n                                            }}>Abrir/Editar</button>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })}\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.selectedView == 1 &&\r\n                    <div>\r\n                        <p>Pedidos finalizados</p>\r\n                        <div className=\"sells-cards\">\r\n                        {this.state.cards.map(element=>{\r\n                                if(element.status){\r\n                                    return(\r\n                                        <div className=\"sells-card-container\">\r\n                                            <h2>{element.cliente}</h2>\r\n                                            <span>id: {element.id}</span>\r\n                                            <div className=\"sells-card-footer\">\r\n                                                <button className=\"card-footer-button\" onClick={()=>{\r\n                                                    this.enableModal(this.state.cards.indexOf(element));\r\n                                                }}>Abrir</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {this.state.modalVisible ? <ModalView selectedSell={this.state.selectedSell} close={this.closeModal}></ModalView> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VerPedidos;\r\n","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\visao-geral\\visaoGeral.js",["89"],"import React, {Component} from 'react';\r\n\r\nimport './visaoGeral.css';\r\n\r\nimport FirebaseControllerFunctions from '../../controller/firebaseControllers/firebaseController';\r\n\r\nclass VisaoGeral extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>Em breve</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VisaoGeral;","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\ver-balanco-mensal\\verBalancoMensal.js",["90","91","92"],"import React, { Component } from 'react';\r\nimport { Doughnut } from 'react-chartjs-2'\r\n\r\nimport './verBalancoMensal.css';\r\n\r\nimport FirebaseControllerFunctions from '../../controller/firebaseControllers/firebaseController';\r\n\r\nclass VerBalancoMensal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            itemsList: [],\r\n            sellsList: [],\r\n            year: '',\r\n            month: '',\r\n            totalVendido: 0,\r\n            custoTotal: 0,\r\n            lucro: 0,\r\n            vendasPorItem: []\r\n        }\r\n\r\n        this.getSells = this.getSells.bind(this);\r\n        this.changeParams = this.changeParams.bind(this);\r\n        this.setTotalCost = this.setTotalCost.bind(this);\r\n        this.setTotalSell = this.setTotalSell.bind(this);\r\n        this.setItemsModels = this.setItemsModels.bind(this);\r\n        this.setProfit = this.setProfit.bind(this);\r\n        this.updateState = this.updateState.bind(this);\r\n        this.clearState = this.clearState.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        const now = new Date();\r\n        let state = this.state;\r\n        state.year = now.getFullYear();\r\n        state.month = now.getMonth()+1;\r\n        this.setState(state);\r\n    }\r\n\r\n    async getSells() {\r\n        let state = this.state;\r\n        state.sellsList = await FirebaseControllerFunctions.getSellsByYearAndMonth(this.state.year, this.state.month);\r\n        this.setState(state);\r\n    }\r\n\r\n    setItemsModels() {\r\n        let state = this.state;\r\n        state.itemsList.forEach(element => {\r\n            state.vendasPorItem.push({\r\n                item: element.nome,\r\n                vendidos: 0\r\n            })\r\n        })\r\n    }\r\n\r\n    countSellsByItems() {\r\n        let state = this.state;\r\n        state.vendasPorItem.forEach(item => {\r\n            state.sellsList.forEach(sell => {\r\n                sell.itens.forEach(sellItem => {\r\n                    if (sellItem.tipo == item.item) {\r\n                        state.vendasPorItem[state.vendasPorItem.indexOf(item)].vendidos = eval(`${sellItem.quantidade} + ${state.vendasPorItem[state.vendasPorItem.indexOf(item)].vendidos}`);\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    changeParams(event) {\r\n        let state = this.state;\r\n        state[event.target.name] = event.target.value;\r\n        this.setState(state);\r\n    }\r\n\r\n    setTotalSell() {\r\n        let state = this.state;\r\n        state.sellsList.forEach(element => {\r\n            state.totalVendido += element.valorTotal;\r\n        });\r\n        this.setState(state);\r\n    }\r\n\r\n    setTotalCost() {\r\n        let state = this.state;\r\n        state.sellsList.forEach(sell => {\r\n            state.custoTotal = state.custoTotal + sell.custoTotal;\r\n        })\r\n        this.setState(state);\r\n    }\r\n\r\n    setProfit() {\r\n        let state = this.state;\r\n        state.lucro = state.totalVendido - state.custoTotal;\r\n        this.setState(state);\r\n    }\r\n\r\n    clearState() {\r\n        let state = this.state;\r\n\r\n        state.itemsList = [];\r\n        state.sellsList = [];\r\n        state.totalVendido = 0;\r\n        state.custoTotal = 0;\r\n        state.lucro = 0;\r\n        state.vendasPorItem = [];\r\n        this.setState(state);\r\n    }\r\n\r\n    async updateState() {\r\n        this.clearState();\r\n        let state = this.state;\r\n        state.itemsList = await FirebaseControllerFunctions.getProducts();\r\n        this.setState(state);\r\n        await this.getSells();\r\n        this.setItemsModels();\r\n        this.setTotalSell();\r\n        this.setTotalCost();\r\n        this.countSellsByItems();\r\n        this.setProfit();\r\n    }\r\n\r\n    getLabels() {\r\n        let state = this.state;\r\n        let labels = []\r\n        state.vendasPorItem.forEach(element => {\r\n            labels.push(element.item)\r\n        })\r\n        return labels;\r\n    }\r\n\r\n    getData() {\r\n        let state = this.state;\r\n        let data = []\r\n        state.vendasPorItem.forEach(element => {\r\n            data.push(element.vendidos)\r\n        })\r\n        return data;\r\n    }\r\n\r\n    generateRandomColor() {\r\n        let state = this.state;\r\n        let colorsArray = [];\r\n\r\n        for (let color = 0; color < state.vendasPorItem.length; color++) {\r\n            colorsArray.push(this.getRandomColor());\r\n        }\r\n\r\n        return colorsArray;\r\n\r\n    }\r\n\r\n    getRandomColor() {\r\n        var letters = '0123456789ABCDEF';\r\n        var color = '#';\r\n        for (var i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"balance-container\">\r\n                <div className=\"params-container\">\r\n                    <span>Ano</span>\r\n                    <input name=\"year\" value={this.state.year} onChange={this.changeParams}></input>\r\n                    <span>Mês</span>\r\n                    <input name=\"month\" value={this.state.month} onChange={this.changeParams}></input>\r\n                </div>\r\n\r\n                <button onClick={async () => {\r\n                    await this.updateState();\r\n                }} className=\"balance-button\">Buscar dados</button>\r\n\r\n                <h2>Dados mensais</h2>\r\n                <div className=\"data-media-container\">\r\n                    <div className=\"sell-cost-profit-container\">\r\n                        <h3>Total vendido no mês: R$ {this.state.totalVendido}</h3>\r\n                        <h4>Custo total do mês: R$ {this.state.custoTotal}</h4>\r\n                        <h4>Lucro do mês: R$ {this.state.lucro}</h4>\r\n                        <h4>Margem de lucro: {eval(`${this.state.lucro}/(${this.state.totalVendido}/100)`).toFixed(2)}%</h4>\r\n                    </div>\r\n                    <div className=\"sell-by-items-container\">\r\n                        <h3>Venda por itens neste mês</h3>\r\n\r\n                        <Doughnut\r\n                            data={{\r\n                                labels: this.getLabels(),\r\n                                datasets: [{\r\n                                    data: this.getData(),\r\n                                    backgroundColor: this.generateRandomColor(),\r\n                                    borderColor: this.generateRandomColor(),\r\n                                }]\r\n                            }}\r\n                            height={200}\r\n                            width={500}\r\n                            options={{\r\n                                maintainAspectRatio: true\r\n                            }}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VerBalancoMensal;","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\ver-pedidos\\modal\\modalView.js",["93","94","95","96"],"import React, {Component} from 'react';\r\nimport './modalView.css';\r\n\r\nimport FirebaseControllerFunctions from '../../../controller/firebaseControllers/firebaseController';\r\n\r\nclass ModalView extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: {\r\n                ...this.props.selectedSell\r\n            },\r\n            newItem:{\r\n                tipo: '',\r\n                quantidade: 0,\r\n                valorUnitario: 0,\r\n                valorTotal: 0,\r\n                custoTotal: 0\r\n            },\r\n            productList: []\r\n        }\r\n\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.setValorTotal = this.setValorTotal.bind(this);\r\n        this.changeData =this.changeData.bind(this);\r\n        this.changeNewItem = this.changeNewItem.bind(this);\r\n        this.setObservacao = this.setObservacao.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setProductOptions();\r\n        console.log(this.state.data);\r\n    }\r\n\r\n    setObservacao(event){\r\n        let state = this.state;\r\n        state.data.observacao = event.target.value;\r\n        this.setState(state);\r\n    }\r\n\r\n    async setProductOptions(){\r\n        let state = this.state;\r\n        state.productList = await FirebaseControllerFunctions.getProducts();\r\n        this.setState(state);\r\n    }\r\n\r\n    deleteItem(index){\r\n        let state = this.state;\r\n        state.data.itens.splice(index,1);\r\n    }\r\n\r\n    setValorTotal(){\r\n        let state = this.state;\r\n        let valorTotal = 0;\r\n        state.data.itens.forEach(element=>{\r\n            valorTotal += element.valorTotal;\r\n        })\r\n        state.data.valorTotal = valorTotal;\r\n        this.setState(state);\r\n    }\r\n\r\n    changeData(event){\r\n        let state = this.state;\r\n        state.data[event.target.name] = event.target.value;\r\n        this.setState(state);\r\n    }\r\n\r\n    changeNewItem(event){\r\n        let state = this.state;\r\n        state.newItem[event.target.name] = event.target.value;\r\n        state.newItem.valorTotal = state.newItem.quantidade * state.newItem.valorUnitario;\r\n        this.setState(state);\r\n    }\r\n\r\n    addNewItem(){\r\n        let state = this.state;\r\n        let productIndex = this.findProductIndex();\r\n        let custo = state.newItem.quantidade * state.productList[productIndex].custoBase;\r\n        console.log(state);\r\n        state.newItem.custoTotal = custo;\r\n        state.data.custoTotal+=custo;\r\n        state.data.itens.push(this.state.newItem);\r\n        state.newItem = {\r\n            tipo: '',\r\n            quantidade: 0,\r\n            valorUnitario: 0,\r\n            valorTotal: 0,\r\n            custoTotal: 0\r\n        }\r\n        this.setState(state);\r\n    }\r\n\r\n    findProductIndex(){\r\n        let state = this.state;\r\n        let productIndex;\r\n        state.productList.forEach(element=>{\r\n            if(element.id == state.newItem.tipo){\r\n                productIndex = state.productList.indexOf(element);\r\n            }\r\n        })\r\n\r\n        return productIndex;\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"sells-modal\">\r\n                <div className=\"content\">\r\n                    <div className=\"modal-header\">\r\n                        <span><strong>Pedido: {this.state.data.id}</strong></span>\r\n                        <span>Data: {this.state.data.mes}/{this.state.data.ano}</span>\r\n                    </div>\r\n                    <div>\r\n\r\n                    </div>\r\n                    <div className=\"modal-form\">\r\n                        <p className=\"modal-field-name\">Cliente: </p>\r\n                        <input name=\"cliente\" className=\"modal-input\" value={this.state.data.cliente} onChange={this.changeData}></input>\r\n                    </div>\r\n\r\n                    <p className=\"modal-field-name\">Adicionar novo item:</p>\r\n                    <div className=\"modal-form\">\r\n                        <select name=\"tipo\" onChange={this.changeNewItem} value={this.state.newItem.tipo} className=\"new-item-select\">\r\n                            <option>Selecionar</option>\r\n                            {this.state.productList.map(element=>\r\n                                <option>{element.id}</option>    \r\n                            )}\r\n                        </select>\r\n                        <span>Quantidade </span>\r\n                        <input name=\"quantidade\" className=\"modal-input\" onChange={this.changeNewItem} value={this.state.newItem.quantidade}></input>\r\n                        <span>Valor Unitário </span>\r\n                        <input name=\"valorUnitario\" className=\"modal-input\" onChange={this.changeNewItem} value={this.state.newItem.valorUnitario}></input>\r\n                        <button className=\"add-item-button\" onClick={()=>{this.addNewItem(); this.setValorTotal()}}>Adicionar</button>\r\n                    </div>\r\n\r\n\r\n                    <ul className=\"sell-items-list-container\">\r\n                        <h3>Lista de itens:</h3>\r\n                        {this.state.data.itens.map(element=>(\r\n                            <div className=\"sell-item-list\" key={this.state.data.itens.indexOf(element)}>\r\n                                <li>\r\n                                    <span>Item: <b>{element.tipo}</b> // Quantidade: <b>{element.quantidade}</b> // Valor Unitário: <b>R$ {element.valorUnitario}</b> // Total: <b>R$ {element.valorTotal}</b></span>\r\n                                </li>\r\n                                <button onClick={()=>{this.deleteItem(this.state.data.itens.indexOf(element)); this.setValorTotal()}} className=\"delete-item-button\">Excluir Item</button>\r\n                            </div>\r\n                        ))}\r\n                    </ul>\r\n\r\n                    <div className=\"modal-form\">\r\n                        <h3>Valor Total do pedido: R$ {this.state.data.valorTotal}</h3>\r\n                    </div>\r\n\r\n                    <div className=\"modal-form\">\r\n                        <span>Observações: </span>\r\n                        <textarea className=\"modal-sell-obs\" value={this.state.data.observacao} onChange={this.setObservacao}></textarea>\r\n                    </div>\r\n                    \r\n                    \r\n\r\n                    <div className=\"modal-buttons-container\">\r\n                        <button className=\"modal-option-button\" onClick={async()=>{\r\n                            await FirebaseControllerFunctions.updateSellByID(this.state.data.id,this.state.data);\r\n                            this.props.close();\r\n                        }}>Salvar alterações</button>\r\n                        <button className=\"modal-option-button\" onClick={async()=>{\r\n                            let state = this.state;\r\n                            state.data.status = true;\r\n                            this.setState(state);\r\n                            await FirebaseControllerFunctions.updateSellByID(this.state.data.id,this.state.data);\r\n                            this.props.close();\r\n                        }}>Salvar e marcar como finalizado</button>\r\n                        <button className=\"modal-option-button\" onClick={()=>this.props.close()}>Fechar</button>\r\n                        <button className=\"modal-close-option-button\" onClick={async ()=>{\r\n                            await FirebaseControllerFunctions.deleteSellByID(this.state.data.id);\r\n                            this.props.close();\r\n                        }}>Excluir</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalView;","C:\\Users\\allan\\Desktop\\Projetos\\Projetos Pessoais\\sistema-de-gerencia\\src\\components\\gerenciar-produtos\\gerenciarProdutos.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":55,"column":31,"nodeType":"103","messageId":"104","endLine":55,"endColumn":33},{"ruleId":"101","severity":1,"message":"102","line":55,"column":57,"nodeType":"103","messageId":"104","endLine":55,"endColumn":59},{"ruleId":"105","severity":1,"message":"106","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":21,"column":9,"nodeType":"111","messageId":"112","endLine":39,"endColumn":10},{"ruleId":"101","severity":1,"message":"102","line":122,"column":27,"nodeType":"103","messageId":"104","endLine":122,"endColumn":29},{"ruleId":"113","severity":1,"message":"114","line":185,"column":70,"nodeType":"115","endLine":185,"endColumn":86},{"ruleId":"113","severity":1,"message":"114","line":185,"column":113,"nodeType":"115","endLine":185,"endColumn":133},{"ruleId":"113","severity":1,"message":"114","line":185,"column":166,"nodeType":"115","endLine":185,"endColumn":177},{"ruleId":"101","severity":1,"message":"102","line":67,"column":42,"nodeType":"103","messageId":"104","endLine":67,"endColumn":44},{"ruleId":"116","severity":1,"message":"117","line":71,"column":54,"nodeType":"118","messageId":"119","endLine":71,"endColumn":56},{"ruleId":"101","severity":1,"message":"102","line":90,"column":42,"nodeType":"103","messageId":"104","endLine":90,"endColumn":44},{"ruleId":"116","severity":1,"message":"117","line":94,"column":54,"nodeType":"118","messageId":"119","endLine":94,"endColumn":56},{"ruleId":"105","severity":1,"message":"106","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":35},{"ruleId":"101","severity":1,"message":"102","line":61,"column":39,"nodeType":"103","messageId":"104","endLine":61,"endColumn":41},{"ruleId":"120","severity":1,"message":"121","line":62,"column":91,"nodeType":"122","messageId":"104","endLine":62,"endColumn":95},{"ruleId":"120","severity":1,"message":"121","line":181,"column":47,"nodeType":"122","messageId":"104","endLine":181,"endColumn":51},{"ruleId":"101","severity":1,"message":"102","line":97,"column":27,"nodeType":"103","messageId":"104","endLine":97,"endColumn":29},{"ruleId":"113","severity":1,"message":"114","line":143,"column":70,"nodeType":"115","endLine":143,"endColumn":86},{"ruleId":"113","severity":1,"message":"114","line":143,"column":113,"nodeType":"115","endLine":143,"endColumn":133},{"ruleId":"113","severity":1,"message":"114","line":143,"column":166,"nodeType":"115","endLine":143,"endColumn":177},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'FirebaseControllerFunctions' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-eval","eval can be harmful.","CallExpression","no-global-assign","no-unsafe-negation"]